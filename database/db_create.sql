DROP SCHEMA IF EXISTS rosberry_fsm CASCADE;
DROP USER IF EXISTS rosberry_fsm;
CREATE USER rosberry_fsm WITH ENCRYPTED PASSWORD '123';
CREATE SCHEMA AUTHORIZATION rosberry_fsm;

SET schema 'rosberry_fsm';

CREATE TABLE Users (
    ID serial NOT NULL,
    email varchar(255) NOT NULL UNIQUE,
	password varchar(128) NOT NULL,
    accessKey varchar(128),
    accessKeyExpireDate timestamp,
    CONSTRAINT User_pk PRIMARY KEY (ID)
) WITH (
  OIDS=FALSE
);

CREATE TABLE Profile (
    userID integer NOT NULL,
	name varchar(255) NOT NULL,
	photo bytea,
	birthday DATE NOT NULL,
    country varchar,
	CONSTRAINT Profile_pk PRIMARY KEY (userID)
) WITH (
  OIDS=FALSE
);

CREATE TABLE Locations (
    ID serial NOT NULL,
    title varchar(32) NOT NULL UNIQUE,
    CONSTRAINT Location_pk PRIMARY KEY (ID)
) WITH (
  OIDS=FALSE
);


CREATE TABLE LocationSettings (
    userID integer NOT NULL UNIQUE,
    location integer NOT NULL
) WITH (
  OIDS=FALSE
);

CREATE TABLE AuthHistory (
	ID serial NOT NULL,
	userID integer NOT NULL,
	time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	coord point NOT NULL,
	CONSTRAINT AuthHistory_pk PRIMARY KEY (ID)
) WITH (
  OIDS=FALSE
);
CREATE TABLE AgeSettings (
	userID integer NOT NULL UNIQUE,
	showRangeForMe integer NOT NULL,
	hideMeByRange integer NOT NULL
) WITH (
  OIDS=FALSE
);

CREATE TABLE AgeRanges (
	ID serial NOT NULL,
	title varchar(128) NOT NULL,
	minAge integer NOT NULL,
	maxAge integer,
	CONSTRAINT AgeRanges_pk PRIMARY KEY (ID)
) WITH (
  OIDS=FALSE
);

CREATE TABLE ShowInterestsSettings (
	userID integer NOT NULL,
	theme integer NOT NULL
) WITH (
  OIDS=FALSE
);

CREATE TABLE Themes (
	ID serial NOT NULL,
	title varchar(255) NOT NULL UNIQUE,
	CONSTRAINT Themes_pk PRIMARY KEY (ID)
) WITH (
  OIDS=FALSE
);

CREATE TABLE HideInterestsSettings (
	userID integer NOT NULL,
	theme integer NOT NULL
) WITH (
  OIDS=FALSE
);

CREATE TABLE UserInterest (
	userID integer NOT NULL,
	theme integer NOT NULL
) WITH (
  OIDS=FALSE
);

CREATE TABLE Empty (
    Avatar bytea
) WITH (
  OIDS=FALSE
);

ALTER TABLE Profile ADD CONSTRAINT Profile_fk0 FOREIGN KEY (userID) REFERENCES Users(ID);
ALTER TABLE AuthHistory ADD CONSTRAINT AuthHistory_fk0 FOREIGN KEY (userID) REFERENCES Users(ID);

ALTER TABLE LocationSettings ADD CONSTRAINT AgeSettings_fk0 FOREIGN KEY (userID) REFERENCES Users(ID);
ALTER TABLE LocationSettings ADD CONSTRAINT AgeSettings_fk1 FOREIGN KEY (location) REFERENCES Locations(ID);

ALTER TABLE AgeSettings ADD CONSTRAINT AgeSettings_fk0 FOREIGN KEY (userID) REFERENCES Users(ID);
ALTER TABLE AgeSettings ADD CONSTRAINT AgeSettings_fk1 FOREIGN KEY (showRangeForMe) REFERENCES AgeRanges(ID);
ALTER TABLE AgeSettings ADD CONSTRAINT AgeSettings_fk2 FOREIGN KEY (hideMeByRange) REFERENCES AgeRanges(ID);

ALTER TABLE ShowInterestsSettings ADD CONSTRAINT ShowInterestsSettings_fk0 FOREIGN KEY (userID) REFERENCES Users(ID);
ALTER TABLE ShowInterestsSettings ADD CONSTRAINT ShowInterestsSettings_fk1 FOREIGN KEY (theme) REFERENCES Themes(ID);

ALTER TABLE HideInterestsSettings ADD CONSTRAINT HideInterestsSettings_fk0 FOREIGN KEY (userID) REFERENCES Users(ID);
ALTER TABLE HideInterestsSettings ADD CONSTRAINT HideInterestsSettings_fk1 FOREIGN KEY (theme) REFERENCES Themes(ID);

ALTER TABLE UserInterest ADD CONSTRAINT UserInterest_fk0 FOREIGN KEY (userID) REFERENCES Users(ID);
ALTER TABLE UserInterest ADD CONSTRAINT UserInterest_fk1 FOREIGN KEY (theme) REFERENCES Themes(ID);

INSERT INTO Empty (Avatar)
VALUES 
(
    decode(
    ''
    ,'base64')
);

INSERT INTO Themes (title)
VALUES
    ('Music'),
    ('Movies'),
    ('Art'),
    ('Animals'),
    ('Little cute kittens');

INSERT INTO AgeRanges (title,minAge,maxAge)
VALUES
    ('all',0, null),
    ('18-24', 18, 24),
    ('25-40', 25, 40),
    ('40+', 41, null);

INSERT INTO Locations (title)
VALUES
    ('world'),
    ('сountry'),
    ('nearby');

INSERT INTO Users (email,password,accessKey,accessKeyExpireDate)
VALUES
    ('User1@mail.ru','123','55555','2020-01-30 09:10:13.65472'),
    ('User2@mail.ru','234','55555','2020-05-30 09:10:13.65472'),
    ('User3@mail.ru','345','55555','2020-05-30 09:10:13.65472'),
    ('User4@mail.ru','456','55555','2020-05-30 09:10:13.65472');
    
INSERT INTO Profile (userID,name,birthday,country)
VALUES
    (1, 'Mike','21.12.1979', 'USA'),
    (2, 'Anna','01.01.2000', 'Russia'),
    (3, 'Dave','10.06.1977', 'Russia'),
    (4, 'Katy','16.08.1994', 'China');

INSERT INTO LocationSettings (userID, location)
VALUES
    (1, 1),
    (2, 2),
    (3, 3),
    (4, 1);

INSERT INTO AgeSettings (userID, showRangeForMe, hideMeByRange)
VALUES
    (1, 2, 3),
    (2, 3, 4),
    (3, 2, 1),
    (4, 1, 1);

INSERT INTO UserInterest (userID, theme)
VALUES
    (1, 1),
    (1, 3),
    (2, 1),
    (2, 4),
    (2, 5),
    (3, 3),
    (3, 2),
    (4, 4);

INSERT INTO ShowInterestsSettings (userID, theme)
VALUES
    (4, 1),
    (4, 3),
    (3, 1),
    (3, 4),
    (3, 5),
    (2, 3),
    (1, 2),
    (1, 4);

INSERT INTO HideInterestsSettings (userID, theme)
VALUES
    (4, 4),
    (4, 2),
    (3, 2),
    (2, 3),
    (2, 1),
    (2, 3),
    (1, 3),
    (1, 1);

INSERT INTO authhistory(userid, "time", coord)
VALUES 
(1, '2020-01-01 04:44:17.519673', '55.7455, 59.1523'),
(1, '2020-02-01 08:04:17.519673', '49.1215, 88.1227'),
(2, '2020-02-01 10:04:17.519673', '55.5615, 59.5527'),
(3, '2020-02-01 08:37:22.519673', '33.2215, 72.1224'),
(4, '2020-02-02 04:04:17.519673', '47.3155, 24.1587');


CREATE FUNCTION fdistance(src_lat double precision, src_lon double precision, dst_lat double precision, dst_lon double precision) RETURNS double precision
    LANGUAGE plpgsql
    AS $$
DECLARE
Distance double precision;
BEGIN

Distance = 6371 * 2 * ASIN(SQRT(
    POWER(SIN((src_lat - ABS(dst_lat)) * PI()/180 / 2), 2) + 
    COS(src_lat * PI()/180) * 
    COS(ABS(dst_lat) * PI()/180) * 
    POWER(SIN((src_lon - dst_lon) * PI()/180 / 2), 2)
));
RETURN Distance;
END;
$$;


CREATE FUNCTION pointDistance(p1 point, p2 point) RETURNS double precision
    LANGUAGE plpgsql
    AS $$
DECLARE
Distance double precision;
BEGIN

Distance = rosberry_fsm.fdistance(p1[0], p1[1], p2[0], p2[1]);

RETURN Distance;
END;
$$;